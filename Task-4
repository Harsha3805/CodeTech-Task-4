# Cell 1: Imports
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

# Cell 2: Load Sample Dataset
from sklearn.datasets import fetch_openml
emails = fetch_openml('sms_spam', version=1, as_frame=True)
df = emails.frame
df.columns = ['label', 'text']  # Rename for clarity

# Cell 3: Data Overview
print(df.head())
print(df['label'].value_counts())

# Cell 4: Preprocessing
df['label'] = df['label'].map({'ham': 0, 'spam': 1})  # Encode labels
X = df['text']
y = df['label']

# Cell 5: Text Vectorization
vectorizer = CountVectorizer()
X_vect = vectorizer.fit_transform(X)

# Cell 6: Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X_vect, y, test_size=0.2, random_state=42)

# Cell 7: Model Training
model = MultinomialNB()
model.fit(X_train, y_train)

# Cell 8: Predictions & Evaluation
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

# Cell 9: Confusion Matrix Visualization
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=['Ham', 'Spam'], yticklabels=['Ham', 'Spam'])
plt.xlabel('Predicted')
plt.ylabel('Actual')
plt.title('Confusion Matrix')
plt.show()
